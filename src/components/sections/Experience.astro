---
import ExperienceCard from '../experience/ExperienceCard.astro';
import { t } from '../../i18n';

export interface Props {
  lang?: 'en' | 'de';
}

const { lang = 'en' } = Astro.props;

// Mock experience data - replace with real data
const experiences = [
  {
    title: 'Development of a ReactJs application for drawing and modifying roofs on 2D Canvases ·',
    company: 'Paul Bauder Co & Kg',
    period: '01/2022 - Present',
    description: ' Using OpenLayers, my team and I have developed an application that is used to create interactive drawings in the area of building planning. I created complex algorithms for the automatic calculation of domain-specific functionalities and used current design standards to keep the web application accessible to the users. In addition to the professional and technical requirements review and the mentoring of less experienced colleagues, I took on the role of Product Owner for a period of 6 months and thus dedicated myself to the creation of requirements and project organization. ',
    technologies: ['Construction Sector', 'ReactJs', 'TypeScript', 'OpenLayers', 'MateiraulUI', 'Vitest', 'Jest', 'Playwright', 'Azure DevOps', 'SpringBoot', 'Kotlin', 'Docker', 'PostgreSQL'],
    achievements: [
      'Implementation of complex vector based algorithms',
      'Ensured code quality by  adding unit, integration and visual regression tests',
      'Leading the project in the role of product owner',
      'Keeping stakeholder up to date and discussing new features'
    ]
  },
  {
    title: 'Angular application for document processing ·',
    company: 'Novatec Consulting GmbH',
    period: '02/2021 - 12/2022',
    description: ' In the role of front-end lead, I was responsible for the development of a new Angular application. I was responsible for the architecture of the new app, as well as customizing the design according to customer requirements, connecting REST APIs and carrying out functional and technical tests to ensure the quality of the requirements. ',
    technologies: ['Construction Sector', 'Angular', 'TypeScript', 'Jest', 'GitLab', 'Jenkins'],
    achievements: [
      'Integration of excel file uploads with automated transformation to application models',
      'Build application from scatch',
      'Designing the new application from scratch',
      'Implemented CI/CD pipeline',
    ]
  },
  {
    title: 'Angular applications for contract management and visualization of vehicle data',
    company: 'Novatec Consulting GmbH',
    period: '10/2018 - 01/2021',
    description: ' Planning and implementation of migrations and new developments. Development of several Angular applications with TypeScript and REST APIs with Kotlin and Java (Spring Boot). Implementation of functional and technical tests for quality assurance. ',
    technologies: ['Automotive Sector', 'Angular', 'TypeScript', 'Jext', 'SpringBoot', 'Kotlin', 'Java', 'GitLab', 'Jenkins', 'Grafana'],
    achievements: [
      'Built multiple client applications from scratch'
    ]
  },
  {
    title: 'Bachelor of Science - Applied Computer Science',
    company: 'DHBW Stuttgart / Novatec Consulting GmbH',
    period: '10/2015 - 09/2018',
    description: 'Practical bachelor degree program with a strong focus on software development and practical work in the company.',
    technologies: ['Angular', 'TypeScript', 'Etherium', 'Bitcoing', 'Java', 'Kotlin', 'Jira', 'Confluence', 'Project Management'],
    achievements: [
      'Bachelor Thesis / Smart Contracts im Bereich E-Health - Datenaustausch zwischen Arzt und Patient'
    ]
  }
];
---

<section 
  class="experience-section" 
  id="experience"
  aria-labelledby="experience-title"
>
  <div class="container">
    <div class="section-header">
      <h2 id="experience-title" class="section-title">
        {t('experience.title', lang)}
      </h2>
      <p class="section-description">
        {t('experience.description', lang)}
      </p>
    </div>
    
    <div class="timeline-container">
      <div class="timeline-line" aria-hidden="true"></div>
      
      <div class="timeline-content">
        {experiences.map((exp, index) => (
          <div 
            class={`timeline-item animate-fade-in-up ${index % 2 === 0 ? 'timeline-item--left' : 'timeline-item--right'}`}
            style={`animation-delay: ${index * 0.2}s`}
          >
            <div class="timeline-dot" aria-hidden="true"></div>
            <div class={`timeline-date ${index % 2 === 0 ? 'timeline-date--right' : 'timeline-date--left'}`}>
              {exp.period}
            </div>
            <ExperienceCard
              title={exp.title}
              company={exp.company}
              period={exp.period}
              description={exp.description}
              technologies={exp.technologies}
              achievements={exp.achievements}
              isLeft={index % 2 === 0}
            />
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script is:inline>
  function initExperienceSection() {
    // Intersection Observer for scroll animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('in-view');
        }
      });
    }, observerOptions);
    
    // Observe timeline items
    const timelineItems = document.querySelectorAll('.timeline-item');
    timelineItems.forEach(item => {
      observer.observe(item);
    });
    
    // Update content on language change
    window.addEventListener('languageChange', (e) => {
      const lang = e.detail;
      const translations = {
        en: {
          title: 'Experience',
          description: 'My professional journey and key projects that shaped my expertise in software development.'
        },
        de: {
          title: 'Erfahrung',
          description: 'Mein beruflicher Werdegang und wichtige Projekte, die meine Expertise in der Softwareentwicklung geprägt haben.'
        }
      };
      
      const currentTranslations = translations[lang] || translations.en;
      
      const sectionTitle = document.getElementById('experience-title');
      const sectionDescription = document.querySelector('.experience-section .section-description');
      
      if (sectionTitle) sectionTitle.textContent = currentTranslations.title;
      if (sectionDescription) sectionDescription.textContent = currentTranslations.description;
      
      // Update achievement titles
      const achievementTitles = document.querySelectorAll('.achievements-title');
      const achievementText = lang === 'de' ? 'Wichtige Erfolge' : 'Key Achievements';
      achievementTitles.forEach(title => {
        title.textContent = achievementText;
      });
    });
  }
  
  document.addEventListener('DOMContentLoaded', initExperienceSection);
</script>

<style>
  .experience-section {
    padding: 5rem 0;
    background: var(--color-background);
    position: relative;
  }
  
  .section-header {
    text-align: center;
    margin-bottom: 4rem;
  }
  
  .section-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--color-text-primary);
    margin: 0 0 1rem 0;
    position: relative;
  }
  
  .section-title::after {
    content: '';
    position: absolute;
    bottom: -0.5rem;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
    border-radius: 2px;
  }
  
  .section-description {
    font-size: 1.125rem;
    color: var(--color-text-secondary);
    max-width: 700px;
    margin: 0 auto;
    line-height: 1.6;
  }
  
  .timeline-container {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .timeline-line {
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 4px;
    background: linear-gradient(180deg, var(--color-primary), var(--color-accent));
    transform: translateX(-50%);
    border-radius: 2px;
  }
  
  .timeline-content {
    position: relative;
    z-index: 1;
  }
  
  .timeline-item {
    margin-bottom: 4rem;
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
  }
  
  .timeline-item.in-view {
    opacity: 1;
    transform: translateY(0);
  }
  
  .timeline-item--left {
    padding-right: calc(50% + 40px);
  }
  
  .timeline-item--right {
    padding-left: calc(50% + 40px);
  }
  
  .timeline-dot {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 16px;
    height: 16px;
    background: var(--color-primary);
    border: 4px solid var(--color-surface);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
    box-shadow: 0 0 0 4px var(--color-primary);
  }
  
  .timeline-date {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    font-weight: 600;
    font-size: 0.9rem;
    color: var(--color-primary);
    background: var(--color-surface);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    border: 2px solid var(--color-primary);
    white-space: nowrap;
    z-index: 1;
  }
  
  .timeline-date--right {
    left: calc(50% + 30px);
  }
  
  .timeline-date--left {
    right: calc(50% + 30px);
  }
  
  /* Animation keyframes */
  .timeline-item.animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* Mobile layout */
  @media (max-width: 767px) {
    .experience-section {
      padding: 3rem 0;
    }
    
    .section-title {
      font-size: 2rem;
    }
    
    .section-header {
      margin-bottom: 3rem;
    }
    
    .timeline-line {
      left: 20px;
    }
    
    .timeline-item--left,
    .timeline-item--right {
      padding-left: 60px;
      padding-right: 0;
    }
    
    .timeline-item {
      margin-bottom: 3rem;
    }
    
    .timeline-dot {
      left: 20px;
      transform: translateX(-50%);
    }
    
    .timeline-date--right,
    .timeline-date--left {
      display: none;
    }
  }
  
  /* Tablet adjustments */
  @media (min-width: 768px) and (max-width: 1023px) {
    .timeline-container {
      max-width: 900px;
    }
  }
  
  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .timeline-item {
      opacity: 1;
      transform: none;
      animation: none;
      transition: none;
    }
    
    .timeline-item.animate-fade-in-up {
      animation: none;
    }
    
    .timeline-item.in-view {
      transition: none;
    }
  }
  
  /* Print styles */
  @media print {
    .experience-section {
      padding: 2rem 0;
    }
    
    .timeline-line {
      display: none;
    }
    
    .timeline-item {
      opacity: 1;
      transform: none;
      margin-bottom: 2rem;
      padding: 0 !important;
      break-inside: avoid;
    }
    
    .timeline-item--left,
    .timeline-item--right {
      padding: 0 !important;
    }
  }
  
  /* High contrast mode */
  @media (prefers-contrast: high) {
    .timeline-line {
      background: var(--color-primary);
    }
  }
  
  /* Focus management for accessibility */
  .timeline-item:focus-within {
    outline: 2px solid var(--color-focus);
    outline-offset: 4px;
    border-radius: 8px;
  }
</style>
